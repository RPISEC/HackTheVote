This challenge was a webserver written in c, and compiled for little endian mips.

Intended Solution Outline:
- Using the password found in the frontdoor challenge
- Download the binary from the status page

- First there is a small buffer overflow in the status
    o This strncat the query string, and smashes the current time
    o /count?ZZZZZZZZZZZ will overwrite with a large enough time value to pass
- Now we also see that the parts of the ip on this page are put together with strcat
    o So we can get a buffer overflow by sending a lot of data as the ip
- This buffer overflow occurs in the datasection, and smashes head of a linked list of exception handers
    o You can now control this pointer and create a fake list entry in your buffer
    o However you can only place a single null byte, you need to position the list entry so that the function pointer is in the same location as the pointer to your entry
- Now you can call the start of your list entry where you can have shell code jump back to your real shellcode earlier in the buffer
- Now just write mips shellcode to dup2 and exec
