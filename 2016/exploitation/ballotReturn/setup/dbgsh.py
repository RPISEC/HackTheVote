import os
import time
import pwd
import grp
from subprocess import call

path = '/ballot_return'

while True:
    print '$',
    try:
        cmd = raw_input()
    except EOFError:
        break
    acmd = cmd.split(' ')
    if acmd[0] == 'cat':
        if len(acmd) > 1 and '..' not in acmd[1]:
            try:
                with open(os.path.join(path, acmd[1])) as f:
                    print f.read()
            except IOError as e:
                print 'dbgsh: {0}'.format(e)
    elif acmd[0] in ['dbg.sh', './dbg.sh']:
        try:
            call(['/ballot_return/dbg.sh'])
        except OSError as e:
            print 'dbgsh: {0}'.format(e)
    elif acmd[0] in ['python']:
        if len(acmd) > 1 and acmd[1] in ['dbgsh.py', './dbgsh.py']:
            try:
                call(['/ballot_return/dbg.sh'])
            except OSError as e:
                print 'dbgsh: {0}'.format(e)
    elif acmd[0] in ['dbgcat.sh', './dbgcat.sh']:
        try:
            call(['/ballot_return/dbgcat.sh'])
        except OSError as e:
            print 'dbgsh: {0}'.format(e)
    elif acmd[0] == 'exit':
        break
    elif acmd[0] == 'whoami':
        print pwd.getpwuid(os.getuid()).pw_name
    elif acmd[0] == 'id':
        res = 'uid={0}({1}) gid={2}({3}) groups='.format(os.getuid(), pwd.getpwuid(os.getuid()).pw_name,
                                                         os.getgid(), grp.getgrgid(os.getgid()).gr_name)
        for g in os.getgroups():
            res += '{0}({1}){2}'.format(g, grp.getgrgid(g).gr_name, ',' if g != os.getgroups()[-1] else '')
        print res
    elif acmd[0] == 'ls':
        if len(acmd) == 1:
            print os.listdir(path)
        elif 'l' in acmd[1]:
            for f in sorted(os.listdir(path)):
                fp = os.path.join(path, f)
                s = os.stat(fp)
                # dir, file, link
                res = '{0}'.format('d' if os.path.isdir(fp) else '-')
                # protections
                prot = s.st_mode >> 6
                res += '{0}{1}{2}'.format('r' if (prot&4) == 4 else '-',
                                         'w' if (prot&2) == 2 else '-',
                                         's' if ((prot&1) == 1 and (s.st_mode&0x8000) == 0x8000) else 'x' if (prot&1) == 1 else '-')
                prot = s.st_mode >> 3
                res += '{0}{1}{2}'.format('r' if (prot&4) == 4 else '-',
                                         'w' if (prot&2) == 2 else '-',
                                         'x' if (prot&1) == 1 else '-')
                prot = s.st_mode
                res += '{0}{1}{2}'.format('r' if (prot&4) == 4 else '-',
                                         'w' if (prot&2) == 2 else '-',
                                         'x' if (prot&1) == 1 else '-')
                # num links
                res += ' {0:>3}'.format(s.st_nlink)
                # owners
                res += ' {0:<8} {1:<8}'.format(pwd.getpwuid(s.st_uid).pw_name, grp.getgrgid( s.st_gid).gr_name)
                # file size
                res += ' {0:>7}'.format(s.st_size)
                # date
                res += ' {0}'.format(time.ctime(s.st_mtime))
                # name
                res += ' ' + f
                print res
    elif len(acmd[0]) == 0:
        pass
    else:
        print 'dbgsh: command not found: {0}'.format(acmd[0])
